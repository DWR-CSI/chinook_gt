process.executor = 'azurebatch'
docker.enabled = true
workDir = 'az://nextflow/work'
params {
    outdir = 'az://nextflow/results/chinookGT_full'
    adapter_file = 'az://nextflow/reference/adapters/GTseq-PE.fa' 
}


azure {
    batch {
        autoPoolMode = false
        allowPoolCreation = true
        runOptions = '-e "HOME=${HOME}" -v /etc/passwd:/etc/passwd:ro -v /etc/group:/etc/group:ro'
        deletePoolsOnCompletion = false
        pools {
            medium {
                machineType = 'Standard_D4_v3'
                autoScale = true
                maxVmCount = 40
                scaleFormula = '''
                startingNumberOfVMs = 1;
                maxNumberofVMs = 40;
                pendingTaskSamplePercent = $PendingTasks.GetSamplePercent(300 * TimeInterval_Second);
                pendingTaskSamples = pendingTaskSamplePercent < 70 ? startingNumberOfVMs : avg($PendingTasks.GetSample(300 * TimeInterval_Second));
                $TargetDedicatedNodes = min(maxNumberofVMs, ceil(pendingTaskSamples));
                $NodeDeallocationOption = taskcompletion;
                '''
            }
        }
    }
    storage {
        fileShares {
            seqres {
                mountPath = "/mnt/batch/tasks/fsmounts/seqres"
                //mountPath = "/mnt/seqres"
                mountOptions = "vers=3.0,dir_mode=0755,file_mode=0755,serverino,nosharesock"
            }
        }
    }
}

process {
  withName: 'ANALYZE_IDXSTATS' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'BCFTOOLS_MPILEUP' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'BWA_MEM' {
    cpus = { 4 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'FASTQC' {
    cpus = { 3 * task.attempt }
    memory = { 2.GB * task.attempt }
  }
  withName: 'FLASH2' {
    cpus = { 3 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'GEN_HAPS' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'GEN_MHP_SAMPLE_SHEET' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'GREB_HAPSTR' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'MULTIQC' {
    cpus = { 1 * task.attempt }
    memory = { 4.GB * task.attempt }
  }
  withName: 'PREP_MHP_RDS' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'RUN_RUBIAS' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'SAMTOOLS' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'STRUCTURE' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'STRUCTURE_ROSA_REPORT' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'STRUC_PARAMS' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'TRIMMOMATIC' {
    cpus = { 4 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
  withName: 'CONCAT_READS' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
  }
    withName: 'RUN_SEQUOIA' {
    cpus = { 4 * task.attempt }
    memory = { 8.GB * task.attempt }
  }
  errorStrategy = 'retry'
  maxRetries = 2
}
