singularity.enabled = true
workDir = '/quobyte/caburgegrp/nextflow/scratch'

params {
    config_profile_name        = 'UCD_Hive'
    config_profile_description = 'University of California, Davis Hive HPC profile for CDFW'
    config_profile_contact     = 'Bryan Nguyen'
    max_cpus                   = 8
    max_memory                 = 128.GB
    max_time                   = 72.h
}

process {
    executor        = 'slurm'
    queue           = 'high'
    queueSize       = 100
    submitRateLimit = '10 sec'
    maxRetries      = 1
    beforeScript    = 'export NXF_SINGULARITY_CACHEDIR="/quobyte/caburgegrp/nextflow/singularity_cache"; module load nextflow'
}

process {
  withName: 'ANALYZE_IDXSTATS' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
    time = {1.h * task.attempt}
  }
  withName: 'BCFTOOLS_MPILEUP' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
    time = {1.h * task.attempt}
  }
  withName: 'BWA_MEM' {
    cpus = { 4 * task.attempt }
    memory = { 1.GB * task.attempt }
    time = {1.h * task.attempt}
  }
  withName: 'FASTQC' {
    cpus = { 3 * task.attempt }
    memory = { 2.GB * task.attempt }
    time = {3.h * task.attempt}
  }
  withName: 'FLASH2' {
    cpus = { 3 * task.attempt }
    memory = { 1.GB * task.attempt }
    time = {1.h * task.attempt}
  }
  withName: 'GEN_HAPS' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
    time = {1.h * task.attempt}
  }
  withName: 'GEN_MHP_SAMPLE_SHEET' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
    time = {1.h * task.attempt}
  }
  withName: 'GREB_HAPSTR' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
    time = {1.h * task.attempt}
  }
  withName: 'MULTIQC' {
    cpus = { 1 * task.attempt }
    memory = { 4.GB * task.attempt }
    time = {3.h * task.attempt}
  }
  withName: 'PREP_MHP_RDS' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
    time = {1.h * task.attempt}
  }
  withName: 'RUN_RUBIAS' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
    time = {1.h * task.attempt}
  }
  withName: 'SAMTOOLS' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
    time = {1.h * task.attempt}
  }
  withName: 'STRUCTURE' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
    time = {1.h * task.attempt}
  }
  withName: 'STRUCTURE_ROSA_REPORT' {
    cpus = { 2 * task.attempt }
    memory = { 1.GB * task.attempt }
    time = {1.h * task.attempt}
  }
  withName: 'STRUC_PARAMS' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
    time = {1.h * task.attempt}
  }
  withName: 'TRIMMOMATIC' {
    cpus = { 4 * task.attempt }
    memory = { 1.GB * task.attempt }
    time = {1.h * task.attempt}
  }
  withName: 'CONCAT_READS' {
    cpus = { 1 * task.attempt }
    memory = { 1.GB * task.attempt }
    time = {1.h * task.attempt}
  }
    withName: 'RUN_SEQUOIA' {
    cpus = { 4 * task.attempt }
    memory = { 8.GB * task.attempt }
    time = {2.h * task.attempt}
  }
  errorStrategy = 'retry'
}